#########
# KINDLY CONTRIBUTED BY TONI GIORGINO
#########
# Toni Giorgino - Experimental Makefile configuration for
# cross-compiling Plumed using Mingw under Linux

# To compile (EXEs need extensions, but we can't change make rules here):
#   make -k all
#   for i in plumed plumed-shared plumed-runtime ; do ln -s $i $i.exe ; done
#   i686-w64-mingw32-strip plumed.exe   # optional

# Requirements
#  - A recent mingw32 distribution (tested on FC17)

# Notes
#  - Shared libraries are disabled. This means that the "runtime"
#    plumed can not be built, nor can libPlumedKernel.dll . Build 
#    is not "clean"
#  - "plumed" here is a fully-static version; remove -static
#    if you want linux-like shared versions.
#  - Tested on XP and Windows 8


#CHECK_BOUNDARIES=-D_GLIBCXX_DEBUG

LIBS=

# GB in this branch it is not necessary to link external lapack/blas
DYNAMIC_LIBS=-lstdc++  -lgfortran
DOUBLEPRECISION=-fdefault-real-8

# TG - disabling DLOPEN (but can be implemented)
# TG - disabling backtrace on exception (not in mingw)
CPPFLAGS= $(CHECK_BOUNDARIES) -I. $(PLUMED_INCLUDE) -D__PLUMED_EXCEPTIONS
CXXFLAGS=-pedantic -Wall -O  -ansi 
CFLAGS=-pedantic -Wall -O  -ansi

LDFLAGS=
SOEXT=dll

MINGW32_PREFIX=i686-w64-mingw32

LDSO=$(MINGW32_PREFIX)-gcc -shared $(CFLAGS)
LD=$(MINGW32_PREFIX)-g++ -static
LDF90=$(MINGW32_PREFIX)-gfortran
CXX=$(MINGW32_PREFIX)-g++
CC=$(MINGW32_PREFIX)-gcc
FC=$(MINGW32_PREFIX)-gfortran

GCCDEP=$(MINGW32_PREFIX)-g++





